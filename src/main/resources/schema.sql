DROP TABLE IF EXISTS MPA, FILMS, GENRES, FILMGENRES, USERS, FRIENDS, LIKES;
CREATE TABLE IF NOT EXISTS MPA(
    MPAID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    NAME VARCHAR(10) NOT NULL,
    DESCRIPTION VARCHAR(200)
);
CREATE TABLE IF NOT EXISTS FILMS(
    FILMID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    DESCRIPTION VARCHAR(200),
    RELEASEDATE DATE NOT NULL,
    DURATION INTEGER NOT NULL,
    MPAID INTEGER NOT NULL,
	FOREIGN KEY (MPAID) REFERENCES MPA(MPAID)
);
CREATE TABLE IF NOT EXISTS GENRES(
    GENREID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL
);
CREATE TABLE IF NOT EXISTS FILMGENRES(
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    FILMID INTEGER NOT NULL,
    GENREID INTEGER NOT NULL,
	FOREIGN KEY (FILMID) REFERENCES FILMS(FILMID),
	FOREIGN KEY (GENREID) REFERENCES GENRES(GENREID)
);
CREATE TABLE IF NOT EXISTS USERS(
    USERID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    EMAIL VARCHAR(200) NOT NULL,
    LOGIN VARCHAR(50) NOT NULL,
    NAME VARCHAR(200) NOT NULL,
    BIRTHDAY DATE NOT NULL
);
CREATE TABLE IF NOT EXISTS FRIENDS(
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    USERID INTEGER NOT NULL,
    FRIENDID INTEGER NOT NULL,
    STATUS BOOLEAN NOT NULL,
    FOREIGN KEY (USERID) REFERENCES USERS(USERID),
    FOREIGN KEY (FRIENDID) REFERENCES USERS(USERID)
);
CREATE TABLE IF NOT EXISTS LIKES(
    LIKEID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    FILMID INTEGER NOT NULL,
    USERID INTEGER NOT NULL,
    FOREIGN KEY (FILMID) REFERENCES FILMS(FILMID),
    FOREIGN KEY (USERID) REFERENCES USERS(USERID)
);